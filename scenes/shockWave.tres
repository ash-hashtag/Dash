[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://b2dxgb2g506wk"]

[sub_resource type="Shader" id="16"]
code = "shader_type canvas_item;
uniform sampler2D SCREEN_TEXTURE: hint_screen_texture, filter_linear_mipmap;
uniform vec2 center;
uniform float force;
uniform float size;
uniform float thickness;

void fragment(){
	float ratio = SCREEN_PIXEL_SIZE.x / SCREEN_PIXEL_SIZE.y;
	vec2 scaledUV = (SCREEN_UV - vec2(0.5, 0.0)) / vec2(ratio, 1.0) + vec2(0.5, 0.0);
	float mask = (1.0 - smoothstep(size - 0.1, size, length(scaledUV- center))) * 
	smoothstep(size - thickness - 0.1, size - thickness, length(scaledUV- center));
	vec2 disp = normalize(scaledUV - center) * force * mask;
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV - disp);
}"

[resource]
shader = SubResource("16")
shader_parameter/center = Vector2(0.5, 0.5)
shader_parameter/force = 0.1
shader_parameter/size = null
shader_parameter/thickness = 0.005
